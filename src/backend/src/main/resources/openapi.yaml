openapi: 3.0.3
info:
  title: Taskboard API
  description: REST API для системы управления задачами
  version: 1.0.0
  contact:
    name: API Support
    email: support@taskboard.com

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.taskboard.com
    description: Production server

tags:
  - name: Auth
    description: Аутентификация и авторизация
  - name: Profile
    description: Управление профилем пользователя

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        data:
          type: object
          nullable: true
        message:
          type: string
        success:
          type: boolean
        errors:
          type: array
          items:
            type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
        - confirmPassword
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
          example: johndoe
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          format: password
          minLength: 8
        confirmPassword:
          type: string
          format: password

    LoginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9...

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [USER, ADMIN]
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    ProfileResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          type: string
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UpdateProfileRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string

    ChangePasswordRequest:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
          minLength: 8

  responses:
    UnauthorizedError:
      description: Токен отсутствует или недействителен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

    BadRequestError:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Вход в систему
      description: Аутентификация пользователя по email и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /auth/register:
    post:
      tags:
        - Auth
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Обновление токена доступа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Токен обновлен
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          token:
                            type: string
        '400':
          $ref: '#/components/responses/BadRequestError'

  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Запрос на восстановление пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Инструкции отправлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /auth/reset-password:
    post:
      tags:
        - Auth
      summary: Сброс пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                  format: password
      responses:
        '200':
          description: Пароль изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /api/profile:
    get:
      tags:
        - Profile
      summary: Получить профиль текущего пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль получен
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ProfileResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    put:
      tags:
        - Profile
      summary: Обновить профиль пользователя
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Профиль обновлен
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/profile/avatar:
    post:
      tags:
        - Profile
      summary: Загрузить аватар пользователя
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Аватар загружен
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      tags:
        - Profile
      summary: Удалить аватар пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Аватар удален
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ProfileResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /api/profile/change-password:
    post:
      tags:
        - Profile
      summary: Изменить пароль пользователя
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Пароль изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
