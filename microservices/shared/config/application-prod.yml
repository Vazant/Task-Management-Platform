# Продакшн конфигурация для микросервисов
spring:
  profiles:
    active: prod
  
  # Database Configuration for Production
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  # JPA Configuration for Production
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
  
  # Redis Configuration for Production
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  
  # Kafka Configuration for Production
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${SERVICE_NAME}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.taskboard.*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      batch-size: 32768
      linger-ms: 10
      buffer-memory: 67108864

# Server Configuration for Production
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-stacktrace: never
    include-message: never
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    max-connections: 8192
    accept-count: 100

# Management and Actuator for Production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      show-components: never
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 50ms, 100ms, 200ms, 500ms

# Logging Configuration for Production
logging:
  level:
    root: WARN
    com.taskboard: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: logs/${spring.application.name}.log
    max-size: 500MB
    max-history: 30

# Service Configuration for Production
service:
  name: ${SERVICE_NAME}
  version: ${SERVICE_VERSION:1.0.0}
  description: ${SERVICE_DESCRIPTION}
  
  # Circuit Breaker Configuration for Production
  circuit-breaker:
    failure-rate-threshold: 30
    wait-duration-in-open-state: 60s
    sliding-window-size: 20
    minimum-number-of-calls: 10
  
  # Retry Configuration for Production
  retry:
    max-attempts: 5
    backoff-delay: 2000ms
    max-backoff-delay: 30000ms

# External Services Configuration for Production
external:
  services:
    user-service: ${USER_SERVICE_URL}
    task-service: ${TASK_SERVICE_URL}
    project-service: ${PROJECT_SERVICE_URL}
    time-service: ${TIME_SERVICE_URL}
    analytics-service: ${ANALYTICS_SERVICE_URL}
    notification-service: ${NOTIFICATION_SERVICE_URL}
    search-service: ${SEARCH_SERVICE_URL}
    file-service: ${FILE_SERVICE_URL}
    gateway-service: ${GATEWAY_SERVICE_URL}

# Monitoring Configuration for Production
monitoring:
  prometheus:
    enabled: true
    path: /actuator/prometheus
  jaeger:
    enabled: true
    endpoint: ${JAEGER_ENDPOINT}
  health-check:
    interval: 30s
    timeout: 10s
    retries: 3

# Feature Flags for Production
feature:
  flags:
    enable-caching: ${ENABLE_CACHING:true}
    enable-metrics: ${ENABLE_METRICS:true}
    enable-tracing: ${ENABLE_TRACING:true}
    enable-security: ${ENABLE_SECURITY:true}

# Security Configuration for Production
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600