#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
# Usage: ./test.sh [service] [test-type]

set -e

SERVICE=${1:-all}
TEST_TYPE=${2:-all}

echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤"
echo "Service: $SERVICE"
echo "Test Type: $TEST_TYPE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ unit —Ç–µ—Å—Ç–æ–≤
run_unit_tests() {
    echo "üî¨ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
    
    if [ "$SERVICE" = "all" ]; then
        for service_dir in services/*/; do
            if [ -f "$service_dir/pom.xml" ]; then
                service_name=$(basename "$service_dir")
                echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $service_name..."
                cd "$service_dir"
                mvn test -Dtest="*Test"
                cd - > /dev/null
            fi
        done
    else
        echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $SERVICE..."
        cd "services/$SERVICE"
        mvn test -Dtest="*Test"
        cd - > /dev/null
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ integration —Ç–µ—Å—Ç–æ–≤
run_integration_tests() {
    echo "üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    echo "üèóÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml up -d postgres redis kafka zookeeper
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    sleep 30
    
    if [ "$SERVICE" = "all" ]; then
        for service_dir in services/*/; do
            if [ -f "$service_dir/pom.xml" ]; then
                service_name=$(basename "$service_dir")
                echo "Integration —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $service_name..."
                cd "$service_dir"
                mvn test -Dtest="*IntegrationTest"
                cd - > /dev/null
            fi
        done
    else
        echo "Integration —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $SERVICE..."
        cd "services/$SERVICE"
        mvn test -Dtest="*IntegrationTest"
        cd - > /dev/null
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml down
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ E2E —Ç–µ—Å—Ç–æ–≤
run_e2e_tests() {
    echo "üé≠ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "üèóÔ∏è –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 60
    
    # –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤
    if [ "$SERVICE" = "all" ]; then
        for service_dir in services/*/; do
            if [ -f "$service_dir/pom.xml" ]; then
                service_name=$(basename "$service_dir")
                echo "E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $service_name..."
                cd "$service_dir"
                mvn test -Dtest="*E2ETest"
                cd - > /dev/null
            fi
        done
    else
        echo "E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $SERVICE..."
        cd "services/$SERVICE"
        mvn test -Dtest="*E2ETest"
        cd - > /dev/null
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml down
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
run_load_tests() {
    echo "‚ö° –ó–∞–ø—É—Å–∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "üèóÔ∏è –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."
    sleep 60
    
    # –ó–∞–ø—É—Å–∫ JMeter —Ç–µ—Å—Ç–æ–≤
    if [ -f "scripts/load-testing.jmx" ]; then
        echo "üöÄ –ó–∞–ø—É—Å–∫ JMeter —Ç–µ—Å—Ç–æ–≤..."
        jmeter -n -t scripts/load-testing.jmx -l results.jtl
    else
        echo "‚ö†Ô∏è JMeter —Ç–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    docker-compose -f infrastructure/docker/docker-compose.yml down
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
generate_coverage_report() {
    echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏..."
    
    if [ "$SERVICE" = "all" ]; then
        for service_dir in services/*/; do
            if [ -f "$service_dir/pom.xml" ]; then
                service_name=$(basename "$service_dir")
                echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –¥–ª—è $service_name..."
                cd "$service_dir"
                mvn jacoco:report
                cd - > /dev/null
            fi
        done
    else
        echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –¥–ª—è $SERVICE..."
        cd "services/$SERVICE"
        mvn jacoco:report
        cd - > /dev/null
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case $TEST_TYPE in
    unit)
        run_unit_tests
        ;;
    integration)
        run_integration_tests
        ;;
    e2e)
        run_e2e_tests
        ;;
    load)
        run_load_tests
        ;;
    coverage)
        generate_coverage_report
        ;;
    all)
        run_unit_tests
        run_integration_tests
        generate_coverage_report
        ;;
    *)
        echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ç–µ—Å—Ç–æ–≤: $TEST_TYPE"
        echo "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: unit, integration, e2e, load, coverage, all"
        exit 1
        ;;
esac

echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:"
echo "  Unit —Ç–µ—Å—Ç—ã: target/surefire-reports/"
echo "  Integration —Ç–µ—Å—Ç—ã: target/surefire-reports/"
echo "  –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞: target/site/jacoco/"
