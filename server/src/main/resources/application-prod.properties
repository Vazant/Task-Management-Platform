# Production Configuration
server.port=8080

# Database Configuration - PostgreSQL
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/taskboarddb}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME:taskboard}
spring.datasource.password=${DATABASE_PASSWORD:password}

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Liquibase Migration for Production
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.drop-first=false
spring.liquibase.contexts=production

# Disable H2 console in production
spring.h2.console.enabled=false

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-make-it-very-long-and-secure-in-production}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Security Configuration
security.csrf.enabled=true
security.h2-console.enabled=false
security.permit-all-paths=/api/auth/**,/api/test/public,/images/**,/avatars/**,/api/webauthn/**,/api/one-time-tokens/**

# Spring Security 6.5 Features
security.dpop.enabled=true
security.oauth2.enabled=false
security.webauthn.enabled=true
security.one-time-token.enabled=true

# WebAuthn Configuration
webauthn.rp.id=${WEBAUTHN_RP_ID:yourdomain.com}
webauthn.rp.name=${WEBAUTHN_RP_NAME:TaskBoard Pro}
webauthn.rp.origins=${WEBAUTHN_RP_ORIGINS:https://yourdomain.com}
webauthn.challenge.timeout=300

# One-Time Token Configuration
one-time-token.expiration.minutes=15
one-time-token.max-active-per-user=5
one-time-token.length=32

# Micrometer Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.mail.enabled=false
management.metrics.export.prometheus.enabled=true
management.tracing.sampling.probability=0.1
management.observations.key-values.context-propagation.enabled=true

# Logging for Production
logging.level.com.taskboard.api=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Validation
spring.jackson.default-property-inclusion=non-null

# Storage Configuration (S3/MinIO)
app.storage.provider=${STORAGE_PROVIDER:s3}
app.storage.endpoint=${STORAGE_ENDPOINT:https://s3.amazonaws.com}
app.storage.access-key=${STORAGE_ACCESS_KEY}
app.storage.secret-key=${STORAGE_SECRET_KEY}
app.storage.bucket-name=${STORAGE_BUCKET_NAME:taskboard-avatars}
app.storage.region=${STORAGE_REGION:us-east-1}
app.storage.cdn-base-url=${STORAGE_CDN_BASE_URL:https://cdn.yourdomain.com}
app.storage.use-https=true
app.storage.connection-timeout=30000
app.storage.read-timeout=60000

# File upload configuration
file.upload.max-size-mb=10
file.upload.allowed-types=image/jpeg,image/png,image/gif,image/webp

# Avatar configuration
app.user.default-avatar-url=/assets/images/default-avatar.svg
app.user.avatar.generate-default=false
app.user.avatar-size=128
app.user.avatar-background-colors=#3B82F6,#10B981,#F59E0B,#EF4444,#8B5CF6,#EC4899,#06B6D4,#84CC16
app.user.avatar-storage=${STORAGE_PROVIDER:s3}

# Redis Configuration (for caching)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=0
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000

# User constraints
user.username.min-length=3
user.username.max-length=20
user.password.min-length=8

# Messages configuration
spring.messages.basename=messages
spring.messages.encoding=UTF-8

# Password reset configuration
password.reset.token.expiration=3600000
password.reset.url.base=${PASSWORD_RESET_URL_BASE:https://yourdomain.com/auth/reset-password}

# Email configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
